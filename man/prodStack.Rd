% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/productionStack.R
\name{prodStack}
\alias{prodStack}
\title{Visualize the production stack of an area}
\usage{
prodStack(x, variables = "eco2mix", colors = NULL, lines = NULL,
  lineColors = NULL, areas = NULL, dateRange = NULL,
  main = "Production stack", unit = c("MWh", "GWh", "TWh"),
  interactive = base::interactive(), legend = TRUE,
  legendId = sample(1e+09, 1), legendItemsPerRow = 5, width = NULL,
  height = NULL)
}
\arguments{
\item{x}{An object of class \code{antaresData} created with function 
\code{\link[antaresRead]{readAntares}} containing data for areas and or
districts.}

\item{variables}{Either a character string containing an alias or a named list of expressions 
created with \code{\link[base]{alist}}. The name of each element is the name
of the variable to draw in the stacked graph. The element itself is an
expression explaining how to compute the variable (see examples).}

\item{colors}{Vector of colors with same length as parameter \code{variables}. If 
\code{variables} is an alias, then this argument should be \code{NULL} in 
order to use default colors.}

\item{lines}{A named list of expressions created with \code{\link[base]{alist}}
indicating how to compute the curves to display on top of the stacked graph.
It should be \code{NULL} if there is no curve to trace or if parameter
\code{variables} is an alias.}

\item{lineColors}{Vector of colors with same length as parameter \code{lines}. This argument
should be \code{NULL} if there is no curve to trace or if parameter
\code{variables} is an alias.}

\item{areas}{Vector of area or district names. The data of these areas or districts is
aggregated by the function to construct the production stack.}

\item{dateRange}{A vector of two dates. Only data points between these two dates are 
displayed. If NULL, then all data is displayed.}

\item{main}{Title of the graph.}

\item{unit}{Unit used in the graph. Possible values are "MWh", "GWh" or "TWh".}

\item{interactive}{LogicalValue. If \code{TRUE}, then a shiny gadget is launched that lets
the user interactively choose the areas or districts to display.}

\item{legend}{Logical value indicating if a legend should be drawn. This argument is 
usefull when one wants to create a shared legend with
\code{\link{prodStackLegend}}}

\item{legendId}{Id of the legend linked to the graph. This argument is 
usefull when one wants to create a shared legend with
\code{\link{prodStackLegend}}}

\item{legendItemsPerRow}{Number of elements to put in each row of the legend.}

\item{width}{Width of the graph expressed in pixels or in percentage of 
the parent element. For instance "500px" and "100\%" are valid values.}

\item{height}{Height of the graph expressed in pixels or in percentage of 
the parent element. For instance "500px" and "100\%" are valid values.}
}
\value{
An interactive html graphic. If argument \code{interactive} is \code{TRUE},
then a shiny gadget is started and the function returns an interactive html
graphic when the user clicks on button "Done".
}
\description{
This function draws the production stack for a set of areas or districts. User
can choose predefined stacks or define its own stacks.
}
\examples{
\dontrun{
mydata <- readAntares(areas = "all", timeStep = "daily")

# Start a shiny gadget that permits to choose areas to display.
prodStack(mydata, unit = "GWh", height="100\%")

# Use in a non-interactive way
prodStack(mydata, unit = "GWh", height="100\%", areas = "fr", interactive = FALSE)

# Define a custom stack
prodStack(mydata, unit = "GWh", height="100\%", 
                variables = alist(wind = WIND, solar = SOLAR),
                colors = c("green", "orange"))
                
# In a custom stack it is possible to use computed values
prodStack(mydata, unit = "GWh", height="100\%", 
                variables = alist(
                  renewable = WIND + SOLAR + `H. ROR` + `H. STOR` + `MISC. NDG`, 
                  thermal = NUCLEAR + LIGNITE + COAL + GAS + OIL + `MIX. FUEL` + `MISC. DTG`
                ),
                colors = c("green", gray(0.3)),
                lines = alist(goalRenewable = LOAD * 0.23),
                lineColors = "#42EB09")
}

}
\seealso{
\code{\link{prodStackLegend}}
}

